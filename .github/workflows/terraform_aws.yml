name: Terraform AWS Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_environment: ${{ github.event.inputs.environment }}
      BUILD_TAG: build-${{ github.run_number }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Action
        run: |
          if [ "${{ github.event.inputs.action }}" == "plan" ]; then
            terraform plan -var-file="environments/${{ github.event.inputs.environment }}.tfvars"
          elif [ "${{ github.event.inputs.action }}" == "apply" ]; then
            terraform apply -auto-approve -var-file="environments/${{ github.event.inputs.environment }}.tfvars"
          elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            terraform destroy -auto-approve -var-file="environments/${{ github.event.inputs.environment }}.tfvars"
          else
            echo "Invalid action: ${{ github.event.inputs.action }}"
            exit 1

